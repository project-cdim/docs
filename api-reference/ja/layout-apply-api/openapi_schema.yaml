components:
  schemas:
    ApplyRequest:
      description: 構成案反映のリクエストボディ
      type: object
      required:
        - procedures
      properties:
        procedures:
          $ref: "#/components/schemas/ProcedureList"
    ProcedureList:
      description: 移行手順リスト
      type: array
      items:
        $ref: "#/components/schemas/Procedure"
    RollbackProcedureList:
      description: |-
        statusがCANCELEDの場合に作成される、実行された移行手順を実行前の状態に戻す移行手順データ。<br>データの形式は移行手順と同様<br>※statusがCOMPLETED、FAILED、SUSPENDEDの場合、当データは存在しない
      type: array
      items:
        $ref: "#/components/schemas/Procedure"
    ResumeProcedureList:
      description: |-
        statusがSUSPENDEDの場合に作成される、中断された時点から構成案反映を再開する場合に使用する移行手順データ。<br>データの形式は移行手順と同様<br>※statusがCOMPLETED、FAILED、CANCELEDの場合、当データは存在しない
      type: array
      items:
        $ref: "#/components/schemas/Procedure"
    Procedure:
      description: 移行手順
      type: object
      required:
        - operationID
        - operation
        - targetDeviceID
        - dependencies
      properties:
        operationID:
          type: integer
          description: 移行手順1操作のID。
          example: 1
        operation:
          type: string
          description: |-
            移行操作の種別。以下の操作を想定。
            - "boot": デバイスの起動
            - "shutdown": デバイスの停止
            - "connect": CPUデバイスと他デバイスの接続
            - "disconnect": CPUデバイスと他デバイスの切断
          enum:
            - boot
            - shutdown
            - connect
            - disconnect
          example: boot
        targetCPUID:
          type: string
          description: |-
            操作対象のCPUデバイスID。\
            ※ "connect"、"disconnect"の時は接続/切断したいデバイスの接続先CPUデバイスIDを示す。\
            ※ 操作種別がデバイスの起動／停止の場合は指定しない。
          example: 12345678-1234-1234-1234-123456789012
        targetDeviceID:
          type: string
          description: |-
            操作対象のデバイスID。\
            ※ "connect"、"disconnect"時に必要なパラメータ。CPUと接続/切断したいデバイスのIDを指定する。\
            ※ "boot"、"shutdown"の時は電源を起動/停止したいCPUデバイスのIDを指す。
          example: 12345678-1234-1234-1234-123456789012
        dependencies:
          type: array
          description: |-
            依存関係のある移行操作のoperationIDを格納するリスト。\
            ※ 格納されたoperationIDの移行操作がすべて終了した際に、本移行操作が実行可能であることを表している。\
            ※ IDが格納されていないオブジェクトの操作については、移行手順の最初の動作となる。
          items:
            type: integer
          example:
            - 1
      example:
        {
          operationID: 1,
          operation: disconnect,
          targetCPUID: 3B4EBEEA-B6DD-45DA-8C8A-2CA2F8F728D6,
          targetDeviceID: 895DFB43-68CD-41D6-8996-EAC8D1EA1E3F,
          dependencies: [],
        }
    ApplyResult:
      description: |-
        移行手順の実行結果の詳細リスト
      type: object
      required:
        - operationID
        - status
      properties:
        operationID:
          type: integer
          description: |-
            移行手順のoperationID
          example: 1
        status:
          description: |-
            実行結果のステータス。以下の内容を設定する<br>正常終了："COMPLETED"<br>異常終了："FAILED"<br>スキップ："SKIPPED"<br>キャンセル："CANCELED"
          example: COMPLETED
        uri:
          type: string
          description: |-
            送信したリクエストのURI<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example: http://<host>/cdim/api/v1/connect
        method:
          type: string
          description: |-
            送信したリクエストのメソッド<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example: PUT
        queryParameter:
          type: string
          description: |-
            送信したリクエストのクエリパラメータ<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example:
            {
              "hostCpuId": "3B4EBEEA-B6DD-45DA-8C8A-2CA2F8F728D6",
              "targetDeviceID": "895DFB43-68CD-41D6-8996-EAC8D1EA1E3F",
            }
        requestBody:
          type: object
          description: |-
            送信したリクエストのリクエストボディ<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          properties:
            action:
              type: string
              example: connect
              enum:
                - on
                - off
                - reset
                - connect
                - disconnect
              description: |-
                デバイスに対する操作<br>
                ※ resetを指定できるのはCPUに対してのみ
            deviceID:
              type: string
              example: 895DFB43-68CD-41D6-8996-EAC8D1EA1E3F
              description: |-
                操作する対象のID<br>
                ※ actionがOn/Offの場合、当データは存在しない
        startedAt:
          type: datetime
          description: 手順開始日時。該当operationIDの移行手順を開始した時間<br>※statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
        endedAt:
          type: datetime
          description: 手順完了日時。該当operationIDの移行手順を完了した時間<br>※statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない

        statusCode:
          type: integer
          description: |-
            返却されたレスポンスのHTTPステータスコード<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example: 200
        responseBody:
          type: object
          description: |-
            返却されたレスポンスのレスポンスボディ<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          properties:
            code:
              type: string
              example: XXXXXXXXXXX
            message:
              type: string
              example: Invalid parameters.
        isOSBoot:
          type: object
          description: |-
            ハードウェア制御機能のOS起動確認APIリクエストの詳細情報 <br>※操作種別：電源ONの場合にのみ存在。値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          properties:
            uri:
              type: string
              description: 送信したOS起動確認APIリクエストのURI
            queryParameter:
              type: object
              description: 送信したOS起動確認APIリクエストのクエリパラメータ
            method:
              type: string
              description: 送信したOS起動確認APIリクエストのメソッド
            statusCode:
              type: int
              description: 送信したOS起動確認APIのレスポンスのHTTPステータスコード
            responseBody:
              type: object
              description: 送信したOS起動確認APIのレスポンスのレスポンスボディ。エラーとなった場合はリクエスト先からのレスポンスボディをそのまま格納する
        getInformation:
          type: object
          description: |-
            ハードウェア制御機能のデバイス情報取得APIリクエストの詳細情報<br>※操作種別：電源OFFで対象デバイスがCPUの場合にのみ存在。値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          properties:
            responseBody:
              type: object
              description: 送信したデバイス情報取得APIのレスポンスのレスポンスボディ<br>※取得したレスポンスの中からデバイスの電源状態を示す「powerState」キーのみを抽出して格納する。エラーとなった場合はリクエスト先からのレスポンスボディをそのまま格納する
    ApplyErrorResult:
      type: object
      properties:
        operationID:
          type: integer
          description: |-
            移行手順のoperationID
          example: 1
        status:
          description: |-
            実行結果のステータス。以下の内容を設定する<br>正常終了："COMPLETED"<br>異常終了："FAILED"<br>スキップ："SKIPPED"<br>キャンセル："CANCELED"
          example: FAILED
        uri:
          type: string
          description: |-
            送信したリクエストのURI<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example: http://cdim/api/v1/connect/{hostCpuId,targetDeviceID}
        method:
          type: string
          description: |-
            送信したリクエストのメソッド<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example: PUT
        queryParameter:
          type: string
          description: |-
            送信したリクエストのクエリパラメータ<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example:
            {
              "hostCpuId": "3B4EBEEA-B6DD-45DA-8C8A-2CA2F8F728D6",
              "targetDeviceID": "895DFB43-68CD-41D6-8996-EAC8D1EA1E3F",
            }
        requestBody:
          type: string
          description: |-
            送信したリクエストのリクエストボディ<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example:
            {
              "hostCpuId": "3B4EBEEA-B6DD-45DA-8C8A-2CA2F8F728D6",
              "targetDeviceID": "895DFB43-68CD-41D6-8996-EAC8D1EA1E3F",
            }
        statusCode:
          type: integer
          description: |-
            返却されたレスポンスのHTTPステータスコード<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          example: 500
        responseBody:
          type: object
          description: |-
            返却されたレスポンスのレスポンスボディ<br>※値が存在しない、statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
          properties:
            code:
              type: string
              example: XXXXXXXXXXX
            message:
              type: string
              example: Invalid parameters.
        startedAt:
          type: datetime
          description: 手順開始日時。該当operationIDの移行手順を開始した時間<br>※statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
        endedAt:
          type: datetime
          description: 手順完了日時。該当operationIDの移行手順を完了した時間<br>※statusがSKIPPEDもしくはCANCELEDの場合、当データは存在しない
    ApplyResponse:
      description: 構成案反映要求のレスポンスボディ
      type: object
      properties:
        result:
          type: string
          description: |-
            構成案反映要求の実行結果。以下の内容を設定する<br>正常終了："COMPLETED"<br>異常終了："FAILED"<br>キャンセル："CANCELED"
          example: COMPLETED
        details:
          type: array
          description: |-
            移行手順の実行結果の詳細リスト
          items:
            $ref: "#/components/schemas/ApplyResult"
    ApplyErrorResponse:
      description: |-
        構成案反映要求実施時にハードウェア制御APIで発生した際のレスポンスボディ
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: エラー内容を表すエラーコード。
          example: E40005
        message:
          type: string
          example: Failed to execute LayoutApply.
          description: エラー内容を表すエラーメッセージ。
        result:
          type: string
          description: |-
            構成案反映要求の実行結果。以下の内容を設定する<br>正常終了："COMPLETED"<br>異常終了："FAILED"<br>キャンセル："CANCELED"
          example: FAILED
        details:
          type: array
          description: |-
            移行手順の実行結果の詳細リスト
          items:
            $ref: "#/components/schemas/ApplyErrorResult"
    ApplyResponseCanceled:
      description: 構成案反映要求がキャンセル終了した場合のレスポンスボディ
      type: object
      properties:
        result:
          type: string
          description: |-
            構成案反映要求の実行結果。以下の内容を設定する<br>正常終了："COMPLETED"<br>異常終了："FAILED"<br>キャンセル："CANCELED"
          example: CANCELED
        details:
          type: array
          description: |-
            移行手順の実行結果の詳細リスト
          items:
            $ref: "#/components/schemas/ApplyResult"
        rollbackProcedures:
          type: array
          description: |-
            実行された移行手順を実行前の状態に戻す移行手順データ<br>
            ※resultがCOMPLETEDもしくはFAILEDの場合、当データは存在しない
          items:
            $ref: "#/components/schemas/Procedure"
    NotExistErrorResponse:
      description: |-
        指定された構成案反映IDが存在しない
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: E40020
          description: エラー内容を表すエラーコード。
        message:
          type: string
          example: Specified 【ApplyID】 is not found
          description: エラー内容を表すエラーメッセージ。
    NotExistTargetNodeIDsErrorResponse:
      description: |-
        指定されたNodeIDsが存在しない
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: E50010
          description: エラー内容を表すエラーコード。
        message:
          type: string
          example: Specified 【targetNodeIDs】 is not found
          description: エラー内容を表すエラーメッセージ。
    ValidationErrorResponse:
      description: |-
        バリエーションチェックでエラーが発生した際のレスポンスボディ
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: エラー内容を表すエラーコード。
          example: E40001
        message:
          type: string
          example: "'123456789g' does not match '^[0-9a-f]+$'"
          description: エラー内容を表すエラーメッセージ。
    ValidationErrorResponseGetAll:
      description: |-
        構成案反映状態一覧取得のバリエーションチェックでエラーが発生した際のレスポンスボディ
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: エラー内容を表すエラーコード。
          example: E40001
        message:
          type: string
          example: Value is not one of ['procedures', 'applyResult', 'rollbackProcedures', 'rollbackResult', 'resumekProcedures']
          description: エラー内容を表すエラーメッセージ。
    ConflictErrorResponse:
      description: |-
        排他制御等でエラーが発生した際のレスポンスボディ
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: エラー内容を表すエラーコード。
          example: E40010
        message:
          type: string
          example: Already running. Cannot start multiple instances.
          description: エラー内容を表すエラーメッセージ。
    ErrorResponse:
      description: サーバーエラー等が発生した際のレスポンスボディ
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Error Code
          description: エラー内容を表すエラーコード。
        message:
          type: string
          example: Error Message
          description: エラー内容を表すエラーメッセージ。
    CancelResponse:
      description: |-
        構成案反映キャンセル要求を実行した際のレスポンスボディ
      required:
        - message
      properties:
        message:
          type: string
          example: Cancel request has been sent successfully.
          description: キャンセル要求の送信に成功したことを表すメッセージ。
    ApplyIDGetResponse:
      description: 構成案反映状態参照(ID指定)のレスポンスボディ
      type: object
      properties:
        applyID:
          type: string
          example: d8eceb14da
          description: 構成案反映ID。0123456789abcdefで構成された10桁のランダム文字列を構成案反映IDとして利用する
        status:
          type: string
          example: COMPLETED
          description: |-
            反映状況情報<br>"COMPLETED"：構成案反映完了、"IN_PROGRESS"：構成案反映中、"SUSPENDED"：構成案反映中断、"FAILED"：構成案反映失敗、"CANCELING"：構成案反映キャンセル中、"CANCELED"：構成案反映キャンセル完了
        procedures:
          $ref: "#/components/schemas/ProcedureList"
        applyResult:
          $ref: "#/components/schemas/ApplyResult"
        rollbackProcedures:
          $ref: "#/components/schemas/RollbackProcedureList"
        startedAt:
          type: datetime
          description: 反映開始日時。該当IDの構成案反映を開始した時間
        endedAt:
          type: datetime
          description: 反映完了日時。該当IDの構成案反映を完了した時間
        canceledAt:
          type: datetime
          description: キャンセル受信日時。該当IDの構成案反映がキャンセル要求を受信した時間<br>※statusがCOMPLETEDもしくはFAILEDの場合、当データは存在しない
        executeRollback:
          type: boolean
          description: 自動ロールバックを行うかどうか判定する用のフラグ。<br>キャンセル要求受信時のオプション「rollback-on-cancel」が指定された場合はtrue(ロールバック実行する)、指定されていない場合はfalse(ロールバック実行しない)<br>※statusがCOMPLETEDもしくはFAILEDの場合、当データは存在しない
        rollbackStatus:
          type: string
          example: COMPLETED
          description: |-
            ロールバック状態情報<br>"COMPLETED"：ロールバック完了、"IN_PROGRESS"：ロールバック中、SUSPENDED"：ロールバック中断、"FAILED"：ロールバック失敗<br>※statusがCOMPLETEDもしくはFAILEDの場合、また該当IDの反映がロールバック実行のオプション無しでキャンセルされていた場合、当データは存在しない
        rollbackResult:
          type: object
          description: |-
            該当IDの構成案反映がキャンセルされた後のロールバック実行の結果。<br>データの形式は反映結果(applyResult)と同様<br>※statusがCOMPLETEDもしくはFAILEDの場合、また該当IDの反映がロールバック実行のオプション無しでキャンセルされていた場合、当データは存在しない
        rollbackStartedAt:
          type: datetime
          description: ロールバック開始日時。該当IDの構成案反映のロールバックを開始した時間
        rollbackEndedAt:
          type: datetime
          description: ロールバック完了日時。該当IDの構成案反映のロールバックを完了した時間
        resumeProcedures:
          $ref: "#/components/schemas/ResumeProcedureList"
        resumeResult:
          type: object
          description: |-
            該当IDの構成案反映が再開された後の結果またはロールバック時中断データを再開した後の結果。<br>データの形式は反映結果(applyResult)と同様<br>※中断・再開が繰り返し発生した場合は最新の結果が格納される
        suspendedAt:
          type: datetime
          description: 中断日時。該当IDの構成案反映を中断した時間またはロールバック時中断した時間。<br>※中断・再開が繰り返し発生した場合は最新の結果が格納される
        resumedAt:
          type: datetime
          description: 再開日時。中断した該当IDの構成案反映を再開した時間またはロールバック時中断データを再開した時間。<br>※中断・再開が繰り返し発生した場合は最新の結果が格納される
    GetAllResponse:
      description: 構成案反映状態一覧取得のレスポンスボディ
      type: object
      properties:
        count:
          type: integer
          description: |-
            構成案反映状態管理DBから取得した件数
          example: 2
        totalCount:
          type: integer
          description: |-
            検索条件に一致した総件数
          example: 20
        applyResults:
          type: array
          description: |-
            取得した構成案反映状態の一覧。取得対象が存在しない場合は空のリストを返却する。
          items:
            $ref: "#/components/schemas/ApplyIDGetResponse"
    DeleteConflictErrorResponse:
      description: |-
        実行中の構成案反映に対し削除処理を実行してエラーが発生した際のレスポンスボディ
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: エラー内容を表すエラーコード。
          example: E40024
        message:
          type: string
          example: Apply ID cannot be deleted because it is currently being running. Try later again.
          description: エラー内容を表すエラーメッセージ。
    ApplyIDPutResponse:
      description: |-
        構成案反映キャンセル要求または構成案反映再開要求を実行した際のレスポンスボディ
      required:
        - status
      properties:
        status:
          type: string
          example: |-
            "IN_PROGRESS", "COMPLETED", "CANCELING", "CANCELED",
          description: 構成案反映状態情報を表すメッセージ。
        rollbackStatus:
          type: string
          example: |-
            "IN_PROGRESS", "COMPLETED", SUSPENDED", "FAILED"
          description: ロールバック状態情報を表すメッセージ。

    DesiredLayout:
      description: |-
        新ノード構成<br>desiredLayoutに新ノード構成のデータが格納される
      type: object
      required:
        - desiredLayout
      properties:
        targetNodeIDs:
          type: array
          description: |-
            設計対象とするノードのID一覧<br>
            指定されたIDのノードを設計変更の対象とする<br>
            targetNodeIDsが未指定の場合は、現ノード構成のすべてを変更対象とする
          example: ["2c0af93a-ef04-4393-a805-86e30e054e74", "3as34r45-ert4-3454-s332-4det0s3ss3sd"]
          items: 
            description: 設計対象とするノードID
            type: string
            example: "2c0af93a-ef04-4393-a805-86e30e054e74"
        desiredLayout:
          $ref: "#/components/schemas/Layout"
    Layout:
      description: |-
        ノード構成
      type: object
      required:
        - nodes
      properties:
        nodes:
          $ref: "#/components/schemas/NodeList"
    NodeList:
      description: ノード一覧。空リストを指定可能<br>
            ・空リストの場合、設計対象の現ノード構成を解体する移行手順を作成する
      type: array
      items:
        $ref: "#/components/schemas/DeviceInfo"
    DeviceInfo:
      description: デバイス情報
      type: object
      properties:
        device:
          type: object
          description: |-
            nodesに格納されるデバイス情報のオブジェクト<br>
            ※deviceのデータを作成する場合、cpuは必須とする
          properties:
            <デバイス種別>:
              type: object
              description: |-
                デバイス種別の例: cpu/memory/storage/networkInterface/gpu etc...<br>
                ※大文字/小文字の区別なく指定可能とする(CPUの場合cpu/CPUのほかに/Cpu/cPu/CpU...などといった表記を許容する)
              required:
                - deviceIDs
              properties:
                deviceIDs:
                  $ref: "#/components/schemas/DeviceIDList"
    DeviceIDList:
      description: 該当デバイスのデバイスID一覧
      type: array
      items:
        $ref: "#/components/schemas/DeviceID"
    DeviceID:
      description: デバイスID
      type: string
      example: "2CA6D4DF-2739-45BA-ACA4-6ABE93E81E15"
